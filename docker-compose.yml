services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
    ports:
      - "80:80"
      - "443:443"

  certbot:
    ports:
      - "6000:80"
    env_file:
      - .env
    volumes:
      - ./nginx/:/etc/nginx/
    build:
      context: ./certbot
      dockerfile: Dockerfile
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .postgres.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      gw:

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      gw:

  backend-go:
    image: vpbuyanov/gw-backend-go:latest
    container_name: gw-backend-go
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - server-data:/var/lib/server/data
    depends_on:
      - postgres
    networks:
      gw:

networks:
  gw: